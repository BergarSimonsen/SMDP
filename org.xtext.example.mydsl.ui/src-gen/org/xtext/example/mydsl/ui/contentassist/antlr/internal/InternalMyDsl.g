/*
* generated by Xtext
*/
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.xtext.example.mydsl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {
 
 	private MyDslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleConfiguratorModel
entryRuleConfiguratorModel 
:
{ before(grammarAccess.getConfiguratorModelRule()); }
	 ruleConfiguratorModel
{ after(grammarAccess.getConfiguratorModelRule()); } 
	 EOF 
;

// Rule ConfiguratorModel
ruleConfiguratorModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConfiguratorModelAccess().getGroup()); }
(rule__ConfiguratorModel__Group__0)
{ after(grammarAccess.getConfiguratorModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValue
entryRuleValue 
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueAccess().getAlternatives()); }
(rule__Value__Alternatives)
{ after(grammarAccess.getValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
(rule__Expression__Alternatives)
{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEString
entryRuleEString 
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringAccess().getAlternatives()); }
(rule__EString__Alternatives)
{ after(grammarAccess.getEStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameter2
entryRuleParameter2 
:
{ before(grammarAccess.getParameter2Rule()); }
	 ruleParameter2
{ after(grammarAccess.getParameter2Rule()); } 
	 EOF 
;

// Rule Parameter2
ruleParameter2
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameter2Access().getGroup()); }
(rule__Parameter2__Group__0)
{ after(grammarAccess.getParameter2Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameter3
entryRuleParameter3 
:
{ before(grammarAccess.getParameter3Rule()); }
	 ruleParameter3
{ after(grammarAccess.getParameter3Rule()); } 
	 EOF 
;

// Rule Parameter3
ruleParameter3
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameter3Access().getGroup()); }
(rule__Parameter3__Group__0)
{ after(grammarAccess.getParameter3Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstraint
entryRuleConstraint 
:
{ before(grammarAccess.getConstraintRule()); }
	 ruleConstraint
{ after(grammarAccess.getConstraintRule()); } 
	 EOF 
;

// Rule Constraint
ruleConstraint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstraintAccess().getGroup()); }
(rule__Constraint__Group__0)
{ after(grammarAccess.getConstraintAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnum
entryRuleEnum 
:
{ before(grammarAccess.getEnumRule()); }
	 ruleEnum
{ after(grammarAccess.getEnumRule()); } 
	 EOF 
;

// Rule Enum
ruleEnum
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumAccess().getGroup()); }
(rule__Enum__Group__0)
{ after(grammarAccess.getEnumAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEInt
entryRuleEInt 
:
{ before(grammarAccess.getEIntRule()); }
	 ruleEInt
{ after(grammarAccess.getEIntRule()); } 
	 EOF 
;

// Rule EInt
ruleEInt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEIntAccess().getGroup()); }
(rule__EInt__Group__0)
{ after(grammarAccess.getEIntAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntLiteral
entryRuleIntLiteral 
:
{ before(grammarAccess.getIntLiteralRule()); }
	 ruleIntLiteral
{ after(grammarAccess.getIntLiteralRule()); } 
	 EOF 
;

// Rule IntLiteral
ruleIntLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntLiteralAccess().getGroup()); }
(rule__IntLiteral__Group__0)
{ after(grammarAccess.getIntLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDoubleLiteral
entryRuleDoubleLiteral 
:
{ before(grammarAccess.getDoubleLiteralRule()); }
	 ruleDoubleLiteral
{ after(grammarAccess.getDoubleLiteralRule()); } 
	 EOF 
;

// Rule DoubleLiteral
ruleDoubleLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDoubleLiteralAccess().getGroup()); }
(rule__DoubleLiteral__Group__0)
{ after(grammarAccess.getDoubleLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringLiteral
entryRuleStringLiteral 
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringLiteralAccess().getGroup()); }
(rule__StringLiteral__Group__0)
{ after(grammarAccess.getStringLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral 
:
{ before(grammarAccess.getBooleanLiteralRule()); }
	 ruleBooleanLiteral
{ after(grammarAccess.getBooleanLiteralRule()); } 
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanLiteralAccess().getGroup()); }
(rule__BooleanLiteral__Group__0)
{ after(grammarAccess.getBooleanLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEDouble
entryRuleEDouble 
:
{ before(grammarAccess.getEDoubleRule()); }
	 ruleEDouble
{ after(grammarAccess.getEDoubleRule()); } 
	 EOF 
;

// Rule EDouble
ruleEDouble
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEDoubleAccess().getGroup()); }
(rule__EDouble__Group__0)
{ after(grammarAccess.getEDoubleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleBinaryExpression
entryRuleBinaryExpression 
:
{ before(grammarAccess.getBinaryExpressionRule()); }
	 ruleBinaryExpression
{ after(grammarAccess.getBinaryExpressionRule()); } 
	 EOF 
;

// Rule BinaryExpression
ruleBinaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBinaryExpressionAccess().getGroup()); }
(rule__BinaryExpression__Group__0)
{ after(grammarAccess.getBinaryExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterIdentifier
entryRuleParameterIdentifier 
:
{ before(grammarAccess.getParameterIdentifierRule()); }
	 ruleParameterIdentifier
{ after(grammarAccess.getParameterIdentifierRule()); } 
	 EOF 
;

// Rule ParameterIdentifier
ruleParameterIdentifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterIdentifierAccess().getGroup()); }
(rule__ParameterIdentifier__Group__0)
{ after(grammarAccess.getParameterIdentifierAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule BinaryOperator
ruleBinaryOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryOperatorAccess().getAlternatives()); }
(rule__BinaryOperator__Alternatives)
{ after(grammarAccess.getBinaryOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__ConfiguratorModel__Alternatives_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getParametersAssignment_4_2_0()); }
(rule__ConfiguratorModel__ParametersAssignment_4_2_0)
{ after(grammarAccess.getConfiguratorModelAccess().getParametersAssignment_4_2_0()); }
)

    |(
{ before(grammarAccess.getConfiguratorModelAccess().getParametersAssignment_4_2_1()); }
(rule__ConfiguratorModel__ParametersAssignment_4_2_1)
{ after(grammarAccess.getConfiguratorModelAccess().getParametersAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Alternatives_4_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getParametersAssignment_4_3_1_0()); }
(rule__ConfiguratorModel__ParametersAssignment_4_3_1_0)
{ after(grammarAccess.getConfiguratorModelAccess().getParametersAssignment_4_3_1_0()); }
)

    |(
{ before(grammarAccess.getConfiguratorModelAccess().getParametersAssignment_4_3_1_1()); }
(rule__ConfiguratorModel__ParametersAssignment_4_3_1_1)
{ after(grammarAccess.getConfiguratorModelAccess().getParametersAssignment_4_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getIntLiteralParserRuleCall_0()); }
	ruleIntLiteral
{ after(grammarAccess.getValueAccess().getIntLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getValueAccess().getDoubleLiteralParserRuleCall_1()); }
	ruleDoubleLiteral
{ after(grammarAccess.getValueAccess().getDoubleLiteralParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getValueAccess().getStringLiteralParserRuleCall_2()); }
	ruleStringLiteral
{ after(grammarAccess.getValueAccess().getStringLiteralParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getValueAccess().getBooleanLiteralParserRuleCall_3()); }
	ruleBooleanLiteral
{ after(grammarAccess.getValueAccess().getBooleanLiteralParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getBinaryExpressionParserRuleCall_0()); }
	ruleBinaryExpression
{ after(grammarAccess.getExpressionAccess().getBinaryExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getIntLiteralParserRuleCall_1()); }
	ruleIntLiteral
{ after(grammarAccess.getExpressionAccess().getIntLiteralParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getDoubleLiteralParserRuleCall_2()); }
	ruleDoubleLiteral
{ after(grammarAccess.getExpressionAccess().getDoubleLiteralParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getStringLiteralParserRuleCall_3()); }
	ruleStringLiteral
{ after(grammarAccess.getExpressionAccess().getStringLiteralParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getBooleanLiteralParserRuleCall_4()); }
	ruleBooleanLiteral
{ after(grammarAccess.getExpressionAccess().getBooleanLiteralParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getParameterIdentifierParserRuleCall_5()); }
	ruleParameterIdentifier
{ after(grammarAccess.getExpressionAccess().getParameterIdentifierParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Alternatives_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEDoubleAccess().getEKeyword_4_0_0()); }

	'E' 

{ after(grammarAccess.getEDoubleAccess().getEKeyword_4_0_0()); }
)

    |(
{ before(grammarAccess.getEDoubleAccess().getEKeyword_4_0_1()); }

	'e' 

{ after(grammarAccess.getEDoubleAccess().getEKeyword_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryOperatorAccess().getANDEnumLiteralDeclaration_0()); }
(	'&&' 
)
{ after(grammarAccess.getBinaryOperatorAccess().getANDEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getOREnumLiteralDeclaration_1()); }
(	'||' 
)
{ after(grammarAccess.getBinaryOperatorAccess().getOREnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getXOREnumLiteralDeclaration_2()); }
(	'!||' 
)
{ after(grammarAccess.getBinaryOperatorAccess().getXOREnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getEQUALSEnumLiteralDeclaration_3()); }
(	'==' 
)
{ after(grammarAccess.getBinaryOperatorAccess().getEQUALSEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getNOTEQUALSEnumLiteralDeclaration_4()); }
(	'!=' 
)
{ after(grammarAccess.getBinaryOperatorAccess().getNOTEQUALSEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getGTEnumLiteralDeclaration_5()); }
(	'>' 
)
{ after(grammarAccess.getBinaryOperatorAccess().getGTEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getLTEnumLiteralDeclaration_6()); }
(	'<' 
)
{ after(grammarAccess.getBinaryOperatorAccess().getLTEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getGTEQEnumLiteralDeclaration_7()); }
(	'>=' 
)
{ after(grammarAccess.getBinaryOperatorAccess().getGTEQEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getLTEQEnumLiteralDeclaration_8()); }
(	'<=' 
)
{ after(grammarAccess.getBinaryOperatorAccess().getLTEQEnumLiteralDeclaration_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__ConfiguratorModel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group__0__Impl
	rule__ConfiguratorModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getConfiguratorModelAction_0()); }
(

)
{ after(grammarAccess.getConfiguratorModelAccess().getConfiguratorModelAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group__1__Impl
	rule__ConfiguratorModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getConfiguratorModelKeyword_1()); }

	'ConfiguratorModel' 

{ after(grammarAccess.getConfiguratorModelAccess().getConfiguratorModelKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group__2__Impl
	rule__ConfiguratorModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getNameAssignment_2()); }
(rule__ConfiguratorModel__NameAssignment_2)
{ after(grammarAccess.getConfiguratorModelAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group__3__Impl
	rule__ConfiguratorModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getConfiguratorModelAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group__4__Impl
	rule__ConfiguratorModel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getGroup_4()); }
(rule__ConfiguratorModel__Group_4__0)?
{ after(grammarAccess.getConfiguratorModelAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group__5__Impl
	rule__ConfiguratorModel__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getGroup_5()); }
(rule__ConfiguratorModel__Group_5__0)?
{ after(grammarAccess.getConfiguratorModelAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group__6__Impl
	rule__ConfiguratorModel__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getGroup_6()); }
(rule__ConfiguratorModel__Group_6__0)?
{ after(grammarAccess.getConfiguratorModelAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getConfiguratorModelAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__ConfiguratorModel__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_4__0__Impl
	rule__ConfiguratorModel__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getParametersKeyword_4_0()); }

	'parameters' 

{ after(grammarAccess.getConfiguratorModelAccess().getParametersKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_4__1__Impl
	rule__ConfiguratorModel__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getLeftCurlyBracketKeyword_4_1()); }

	'{' 

{ after(grammarAccess.getConfiguratorModelAccess().getLeftCurlyBracketKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_4__2__Impl
	rule__ConfiguratorModel__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getAlternatives_4_2()); }
(rule__ConfiguratorModel__Alternatives_4_2)
{ after(grammarAccess.getConfiguratorModelAccess().getAlternatives_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_4__3__Impl
	rule__ConfiguratorModel__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getGroup_4_3()); }
(rule__ConfiguratorModel__Group_4_3__0)*
{ after(grammarAccess.getConfiguratorModelAccess().getGroup_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getRightCurlyBracketKeyword_4_4()); }

	'}' 

{ after(grammarAccess.getConfiguratorModelAccess().getRightCurlyBracketKeyword_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ConfiguratorModel__Group_4_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_4_3__0__Impl
	rule__ConfiguratorModel__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_4_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getCommaKeyword_4_3_0()); }

	',' 

{ after(grammarAccess.getConfiguratorModelAccess().getCommaKeyword_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group_4_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_4_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getAlternatives_4_3_1()); }
(rule__ConfiguratorModel__Alternatives_4_3_1)
{ after(grammarAccess.getConfiguratorModelAccess().getAlternatives_4_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConfiguratorModel__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_5__0__Impl
	rule__ConfiguratorModel__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getConstraintsKeyword_5_0()); }

	'constraints' 

{ after(grammarAccess.getConfiguratorModelAccess().getConstraintsKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_5__1__Impl
	rule__ConfiguratorModel__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getLeftCurlyBracketKeyword_5_1()); }

	'{' 

{ after(grammarAccess.getConfiguratorModelAccess().getLeftCurlyBracketKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_5__2__Impl
	rule__ConfiguratorModel__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getConstraintsAssignment_5_2()); }
(rule__ConfiguratorModel__ConstraintsAssignment_5_2)
{ after(grammarAccess.getConfiguratorModelAccess().getConstraintsAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_5__3__Impl
	rule__ConfiguratorModel__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getGroup_5_3()); }
(rule__ConfiguratorModel__Group_5_3__0)*
{ after(grammarAccess.getConfiguratorModelAccess().getGroup_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group_5__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_5__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_5__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getRightCurlyBracketKeyword_5_4()); }

	'}' 

{ after(grammarAccess.getConfiguratorModelAccess().getRightCurlyBracketKeyword_5_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ConfiguratorModel__Group_5_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_5_3__0__Impl
	rule__ConfiguratorModel__Group_5_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_5_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getCommaKeyword_5_3_0()); }

	',' 

{ after(grammarAccess.getConfiguratorModelAccess().getCommaKeyword_5_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group_5_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_5_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_5_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getConstraintsAssignment_5_3_1()); }
(rule__ConfiguratorModel__ConstraintsAssignment_5_3_1)
{ after(grammarAccess.getConfiguratorModelAccess().getConstraintsAssignment_5_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConfiguratorModel__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_6__0__Impl
	rule__ConfiguratorModel__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getEnumsKeyword_6_0()); }

	'enums' 

{ after(grammarAccess.getConfiguratorModelAccess().getEnumsKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_6__1__Impl
	rule__ConfiguratorModel__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getLeftCurlyBracketKeyword_6_1()); }

	'{' 

{ after(grammarAccess.getConfiguratorModelAccess().getLeftCurlyBracketKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_6__2__Impl
	rule__ConfiguratorModel__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getEnumsAssignment_6_2()); }
(rule__ConfiguratorModel__EnumsAssignment_6_2)
{ after(grammarAccess.getConfiguratorModelAccess().getEnumsAssignment_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_6__3__Impl
	rule__ConfiguratorModel__Group_6__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getGroup_6_3()); }
(rule__ConfiguratorModel__Group_6_3__0)*
{ after(grammarAccess.getConfiguratorModelAccess().getGroup_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group_6__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_6__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_6__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getRightCurlyBracketKeyword_6_4()); }

	'}' 

{ after(grammarAccess.getConfiguratorModelAccess().getRightCurlyBracketKeyword_6_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ConfiguratorModel__Group_6_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_6_3__0__Impl
	rule__ConfiguratorModel__Group_6_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_6_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getCommaKeyword_6_3_0()); }

	',' 

{ after(grammarAccess.getConfiguratorModelAccess().getCommaKeyword_6_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group_6_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_6_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_6_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getEnumsAssignment_6_3_1()); }
(rule__ConfiguratorModel__EnumsAssignment_6_3_1)
{ after(grammarAccess.getConfiguratorModelAccess().getEnumsAssignment_6_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameter2__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter2__Group__0__Impl
	rule__Parameter2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter2__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter2Access().getParameterAction_0()); }
(

)
{ after(grammarAccess.getParameter2Access().getParameterAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter2__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter2__Group__1__Impl
	rule__Parameter2__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter2__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter2Access().getParameterKeyword_1()); }

	'Parameter' 

{ after(grammarAccess.getParameter2Access().getParameterKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter2__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter2__Group__2__Impl
	rule__Parameter2__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter2__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter2Access().getNameAssignment_2()); }
(rule__Parameter2__NameAssignment_2)
{ after(grammarAccess.getParameter2Access().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter2__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter2__Group__3__Impl
	rule__Parameter2__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter2__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter2Access().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getParameter2Access().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter2__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter2__Group__4__Impl
	rule__Parameter2__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter2__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter2Access().getGroup_4()); }
(rule__Parameter2__Group_4__0)
{ after(grammarAccess.getParameter2Access().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter2__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter2__Group__5__Impl
	rule__Parameter2__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter2__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter2Access().getCommaKeyword_5()); }

	',' 

{ after(grammarAccess.getParameter2Access().getCommaKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter2__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter2__Group__6__Impl
	rule__Parameter2__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter2__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter2Access().getGroup_6()); }
(rule__Parameter2__Group_6__0)
{ after(grammarAccess.getParameter2Access().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter2__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter2__Group__7__Impl
	rule__Parameter2__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter2__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter2Access().getCommaKeyword_7()); }

	',' 

{ after(grammarAccess.getParameter2Access().getCommaKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter2__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter2__Group__8__Impl
	rule__Parameter2__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter2__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter2Access().getGroup_8()); }
(rule__Parameter2__Group_8__0)?
{ after(grammarAccess.getParameter2Access().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter2__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter2__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter2__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter2Access().getRightParenthesisKeyword_9()); }

	')' 

{ after(grammarAccess.getParameter2Access().getRightParenthesisKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__Parameter2__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter2__Group_4__0__Impl
	rule__Parameter2__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter2__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter2Access().getMaxChosenValuesKeyword_4_0()); }

	'maxChosenValues' 

{ after(grammarAccess.getParameter2Access().getMaxChosenValuesKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter2__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter2__Group_4__1__Impl
	rule__Parameter2__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter2__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter2Access().getColonKeyword_4_1()); }

	':' 

{ after(grammarAccess.getParameter2Access().getColonKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter2__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter2__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter2__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter2Access().getMaxChosenValuesAssignment_4_2()); }
(rule__Parameter2__MaxChosenValuesAssignment_4_2)
{ after(grammarAccess.getParameter2Access().getMaxChosenValuesAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Parameter2__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter2__Group_6__0__Impl
	rule__Parameter2__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter2__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter2Access().getMinChosenValuesKeyword_6_0()); }

	'minChosenValues' 

{ after(grammarAccess.getParameter2Access().getMinChosenValuesKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter2__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter2__Group_6__1__Impl
	rule__Parameter2__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter2__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter2Access().getColonKeyword_6_1()); }

	':' 

{ after(grammarAccess.getParameter2Access().getColonKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter2__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter2__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter2__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter2Access().getMinChosenValuesAssignment_6_2()); }
(rule__Parameter2__MinChosenValuesAssignment_6_2)
{ after(grammarAccess.getParameter2Access().getMinChosenValuesAssignment_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Parameter2__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter2__Group_8__0__Impl
	rule__Parameter2__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter2__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter2Access().getEnumKeyword_8_0()); }

	'enum' 

{ after(grammarAccess.getParameter2Access().getEnumKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter2__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter2__Group_8__1__Impl
	rule__Parameter2__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter2__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter2Access().getColonKeyword_8_1()); }

	':' 

{ after(grammarAccess.getParameter2Access().getColonKeyword_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter2__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter2__Group_8__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter2__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter2Access().getEnumAssignment_8_2()); }
(rule__Parameter2__EnumAssignment_8_2)
{ after(grammarAccess.getParameter2Access().getEnumAssignment_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Parameter3__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter3__Group__0__Impl
	rule__Parameter3__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter3__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter3Access().getParameterAction_0()); }
(

)
{ after(grammarAccess.getParameter3Access().getParameterAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter3__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter3__Group__1__Impl
	rule__Parameter3__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter3__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter3Access().getParameterKeyword_1()); }

	'Parameter' 

{ after(grammarAccess.getParameter3Access().getParameterKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter3__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter3__Group__2__Impl
	rule__Parameter3__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter3__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter3Access().getNameAssignment_2()); }
(rule__Parameter3__NameAssignment_2)
{ after(grammarAccess.getParameter3Access().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter3__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter3__Group__3__Impl
	rule__Parameter3__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter3__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter3Access().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getParameter3Access().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter3__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter3__Group__4__Impl
	rule__Parameter3__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter3__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter3Access().getGroup_4()); }
(rule__Parameter3__Group_4__0)
{ after(grammarAccess.getParameter3Access().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter3__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter3__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter3__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter3Access().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getParameter3Access().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Parameter3__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter3__Group_4__0__Impl
	rule__Parameter3__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter3__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter3Access().getChildrenKeyword_4_0()); }

	'children' 

{ after(grammarAccess.getParameter3Access().getChildrenKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter3__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter3__Group_4__1__Impl
	rule__Parameter3__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter3__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter3Access().getColonKeyword_4_1()); }

	':' 

{ after(grammarAccess.getParameter3Access().getColonKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter3__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter3__Group_4__2__Impl
	rule__Parameter3__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter3__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter3Access().getLeftSquareBracketKeyword_4_2()); }

	'[' 

{ after(grammarAccess.getParameter3Access().getLeftSquareBracketKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter3__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter3__Group_4__3__Impl
	rule__Parameter3__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter3__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter3Access().getChildrenAssignment_4_3()); }
(rule__Parameter3__ChildrenAssignment_4_3)
{ after(grammarAccess.getParameter3Access().getChildrenAssignment_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter3__Group_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter3__Group_4__4__Impl
	rule__Parameter3__Group_4__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter3__Group_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter3Access().getGroup_4_4()); }
(rule__Parameter3__Group_4_4__0)*
{ after(grammarAccess.getParameter3Access().getGroup_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter3__Group_4__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter3__Group_4__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter3__Group_4__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter3Access().getRightSquareBracketKeyword_4_5()); }

	']' 

{ after(grammarAccess.getParameter3Access().getRightSquareBracketKeyword_4_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Parameter3__Group_4_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter3__Group_4_4__0__Impl
	rule__Parameter3__Group_4_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter3__Group_4_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter3Access().getCommaKeyword_4_4_0()); }

	',' 

{ after(grammarAccess.getParameter3Access().getCommaKeyword_4_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter3__Group_4_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter3__Group_4_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter3__Group_4_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter3Access().getChildrenAssignment_4_4_1()); }
(rule__Parameter3__ChildrenAssignment_4_4_1)
{ after(grammarAccess.getParameter3Access().getChildrenAssignment_4_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Constraint__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__0__Impl
	rule__Constraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getConstraintAction_0()); }
(

)
{ after(grammarAccess.getConstraintAccess().getConstraintAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__1__Impl
	rule__Constraint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getGroup_1()); }
(rule__Constraint__Group_1__0)
{ after(grammarAccess.getConstraintAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getGroup_2()); }
(rule__Constraint__Group_2__0)
{ after(grammarAccess.getConstraintAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Constraint__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group_1__0__Impl
	rule__Constraint__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getIfKeyword_1_0()); }

	'if' 

{ after(grammarAccess.getConstraintAccess().getIfKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getIfAssignment_1_1()); }
(rule__Constraint__IfAssignment_1_1)
{ after(grammarAccess.getConstraintAccess().getIfAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Constraint__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group_2__0__Impl
	rule__Constraint__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getThenKeyword_2_0()); }

	'then' 

{ after(grammarAccess.getConstraintAccess().getThenKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getThenAssignment_2_1()); }
(rule__Constraint__ThenAssignment_2_1)
{ after(grammarAccess.getConstraintAccess().getThenAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Enum__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__0__Impl
	rule__Enum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getEnumKeyword_0()); }

	'Enum' 

{ after(grammarAccess.getEnumAccess().getEnumKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__1__Impl
	rule__Enum__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getNameAssignment_1()); }
(rule__Enum__NameAssignment_1)
{ after(grammarAccess.getEnumAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__2__Impl
	rule__Enum__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getEnumAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__3__Impl
	rule__Enum__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getValuesAssignment_3()); }
(rule__Enum__ValuesAssignment_3)
{ after(grammarAccess.getEnumAccess().getValuesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__4__Impl
	rule__Enum__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getGroup_4()); }
(rule__Enum__Group_4__0)*
{ after(grammarAccess.getEnumAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getSemicolonKeyword_5()); }

	';' 

{ after(grammarAccess.getEnumAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Enum__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group_4__0__Impl
	rule__Enum__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getEnumAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getValuesAssignment_4_1()); }
(rule__Enum__ValuesAssignment_4_1)
{ after(grammarAccess.getEnumAccess().getValuesAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EInt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EInt__Group__0__Impl
	rule__EInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
(
	'-' 
)?
{ after(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EInt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
{ after(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IntLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntLiteral__Group__0__Impl
	rule__IntLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntLiteralAccess().getIntLiteralAction_0()); }
(

)
{ after(grammarAccess.getIntLiteralAccess().getIntLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntLiteralAccess().getValueAssignment_1()); }
(rule__IntLiteral__ValueAssignment_1)?
{ after(grammarAccess.getIntLiteralAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DoubleLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoubleLiteral__Group__0__Impl
	rule__DoubleLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleLiteralAccess().getDoubleLiteralAction_0()); }
(

)
{ after(grammarAccess.getDoubleLiteralAccess().getDoubleLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoubleLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoubleLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleLiteralAccess().getValueAssignment_1()); }
(rule__DoubleLiteral__ValueAssignment_1)?
{ after(grammarAccess.getDoubleLiteralAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StringLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringLiteral__Group__0__Impl
	rule__StringLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getStringLiteralAction_0()); }
(

)
{ after(grammarAccess.getStringLiteralAccess().getStringLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getValueAssignment_1()); }
(rule__StringLiteral__ValueAssignment_1)?
{ after(grammarAccess.getStringLiteralAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BooleanLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanLiteral__Group__0__Impl
	rule__BooleanLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0()); }
(

)
{ after(grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getValueAssignment_1()); }
(rule__BooleanLiteral__ValueAssignment_1)?
{ after(grammarAccess.getBooleanLiteralAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EDouble__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EDouble__Group__0__Impl
	rule__EDouble__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_0()); }
(
	'-' 
)?
{ after(grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EDouble__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EDouble__Group__1__Impl
	rule__EDouble__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_1()); }
(	RULE_INT)?
{ after(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EDouble__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EDouble__Group__2__Impl
	rule__EDouble__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEDoubleAccess().getFullStopKeyword_2()); }

	'.' 

{ after(grammarAccess.getEDoubleAccess().getFullStopKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EDouble__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EDouble__Group__3__Impl
	rule__EDouble__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_3()); }
	RULE_INT
{ after(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EDouble__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EDouble__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEDoubleAccess().getGroup_4()); }
(rule__EDouble__Group_4__0)?
{ after(grammarAccess.getEDoubleAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__EDouble__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EDouble__Group_4__0__Impl
	rule__EDouble__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEDoubleAccess().getAlternatives_4_0()); }
(rule__EDouble__Alternatives_4_0)
{ after(grammarAccess.getEDoubleAccess().getAlternatives_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EDouble__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EDouble__Group_4__1__Impl
	rule__EDouble__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_4_1()); }
(
	'-' 
)?
{ after(grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EDouble__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EDouble__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_4_2()); }
	RULE_INT
{ after(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BinaryExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryExpression__Group__0__Impl
	rule__BinaryExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryExpressionAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getBinaryExpressionAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryExpression__Group__1__Impl
	rule__BinaryExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryExpressionAccess().getLeftOperandAssignment_1()); }
(rule__BinaryExpression__LeftOperandAssignment_1)
{ after(grammarAccess.getBinaryExpressionAccess().getLeftOperandAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryExpression__Group__2__Impl
	rule__BinaryExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryExpressionAccess().getOperatorAssignment_2()); }
(rule__BinaryExpression__OperatorAssignment_2)
{ after(grammarAccess.getBinaryExpressionAccess().getOperatorAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryExpression__Group__3__Impl
	rule__BinaryExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryExpressionAccess().getRightOperandAssignment_3()); }
(rule__BinaryExpression__RightOperandAssignment_3)
{ after(grammarAccess.getBinaryExpressionAccess().getRightOperandAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryExpressionAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getBinaryExpressionAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ParameterIdentifier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterIdentifier__Group__0__Impl
	rule__ParameterIdentifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterIdentifier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterIdentifierAccess().getParameterIdentifierKeyword_0()); }

	'ParameterIdentifier' 

{ after(grammarAccess.getParameterIdentifierAccess().getParameterIdentifierKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterIdentifier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterIdentifier__Group__1__Impl
	rule__ParameterIdentifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterIdentifier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterIdentifierAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getParameterIdentifierAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterIdentifier__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterIdentifier__Group__2__Impl
	rule__ParameterIdentifier__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterIdentifier__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterIdentifierAccess().getParameterKeyword_2()); }

	'parameter' 

{ after(grammarAccess.getParameterIdentifierAccess().getParameterKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterIdentifier__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterIdentifier__Group__3__Impl
	rule__ParameterIdentifier__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterIdentifier__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterIdentifierAccess().getParameterAssignment_3()); }
(rule__ParameterIdentifier__ParameterAssignment_3)
{ after(grammarAccess.getParameterIdentifierAccess().getParameterAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterIdentifier__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterIdentifier__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterIdentifier__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterIdentifierAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getParameterIdentifierAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}













rule__ConfiguratorModel__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getNameEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getConfiguratorModelAccess().getNameEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__ParametersAssignment_4_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getParametersParameter2ParserRuleCall_4_2_0_0()); }
	ruleParameter2{ after(grammarAccess.getConfiguratorModelAccess().getParametersParameter2ParserRuleCall_4_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__ParametersAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getParametersParameter3ParserRuleCall_4_2_1_0()); }
	ruleParameter3{ after(grammarAccess.getConfiguratorModelAccess().getParametersParameter3ParserRuleCall_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__ParametersAssignment_4_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getParametersParameter2ParserRuleCall_4_3_1_0_0()); }
	ruleParameter2{ after(grammarAccess.getConfiguratorModelAccess().getParametersParameter2ParserRuleCall_4_3_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__ParametersAssignment_4_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getParametersParameter3ParserRuleCall_4_3_1_1_0()); }
	ruleParameter3{ after(grammarAccess.getConfiguratorModelAccess().getParametersParameter3ParserRuleCall_4_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__ConstraintsAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getConstraintsConstraintParserRuleCall_5_2_0()); }
	ruleConstraint{ after(grammarAccess.getConfiguratorModelAccess().getConstraintsConstraintParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__ConstraintsAssignment_5_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getConstraintsConstraintParserRuleCall_5_3_1_0()); }
	ruleConstraint{ after(grammarAccess.getConfiguratorModelAccess().getConstraintsConstraintParserRuleCall_5_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__EnumsAssignment_6_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getEnumsEnumParserRuleCall_6_2_0()); }
	ruleEnum{ after(grammarAccess.getConfiguratorModelAccess().getEnumsEnumParserRuleCall_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__EnumsAssignment_6_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getEnumsEnumParserRuleCall_6_3_1_0()); }
	ruleEnum{ after(grammarAccess.getConfiguratorModelAccess().getEnumsEnumParserRuleCall_6_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter2__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter2Access().getNameEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getParameter2Access().getNameEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter2__MaxChosenValuesAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter2Access().getMaxChosenValuesEIntParserRuleCall_4_2_0()); }
	ruleEInt{ after(grammarAccess.getParameter2Access().getMaxChosenValuesEIntParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter2__MinChosenValuesAssignment_6_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter2Access().getMinChosenValuesEIntParserRuleCall_6_2_0()); }
	ruleEInt{ after(grammarAccess.getParameter2Access().getMinChosenValuesEIntParserRuleCall_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter2__EnumAssignment_8_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter2Access().getEnumEnumCrossReference_8_2_0()); }
(
{ before(grammarAccess.getParameter2Access().getEnumEnumEStringParserRuleCall_8_2_0_1()); }
	ruleEString{ after(grammarAccess.getParameter2Access().getEnumEnumEStringParserRuleCall_8_2_0_1()); }
)
{ after(grammarAccess.getParameter2Access().getEnumEnumCrossReference_8_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter3__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter3Access().getNameEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getParameter3Access().getNameEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter3__ChildrenAssignment_4_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter3Access().getChildrenParameterCrossReference_4_3_0()); }
(
{ before(grammarAccess.getParameter3Access().getChildrenParameterEStringParserRuleCall_4_3_0_1()); }
	ruleEString{ after(grammarAccess.getParameter3Access().getChildrenParameterEStringParserRuleCall_4_3_0_1()); }
)
{ after(grammarAccess.getParameter3Access().getChildrenParameterCrossReference_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter3__ChildrenAssignment_4_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter3Access().getChildrenParameterCrossReference_4_4_1_0()); }
(
{ before(grammarAccess.getParameter3Access().getChildrenParameterEStringParserRuleCall_4_4_1_0_1()); }
	ruleEString{ after(grammarAccess.getParameter3Access().getChildrenParameterEStringParserRuleCall_4_4_1_0_1()); }
)
{ after(grammarAccess.getParameter3Access().getChildrenParameterCrossReference_4_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__IfAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getIfBinaryExpressionParserRuleCall_1_1_0()); }
	ruleBinaryExpression{ after(grammarAccess.getConstraintAccess().getIfBinaryExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__ThenAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getThenBinaryExpressionParserRuleCall_2_1_0()); }
	ruleBinaryExpression{ after(grammarAccess.getConstraintAccess().getThenBinaryExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getEnumAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__ValuesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getValuesValueParserRuleCall_3_0()); }
	ruleValue{ after(grammarAccess.getEnumAccess().getValuesValueParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__ValuesAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getValuesValueParserRuleCall_4_1_0()); }
	ruleValue{ after(grammarAccess.getEnumAccess().getValuesValueParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntLiteral__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntLiteralAccess().getValueEIntParserRuleCall_1_0()); }
	ruleEInt{ after(grammarAccess.getIntLiteralAccess().getValueEIntParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleLiteral__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleLiteralAccess().getValueEDoubleParserRuleCall_1_0()); }
	ruleEDouble{ after(grammarAccess.getDoubleLiteralAccess().getValueEDoubleParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getValueEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getStringLiteralAccess().getValueEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getValueValueKeyword_1_0()); }
(
{ before(grammarAccess.getBooleanLiteralAccess().getValueValueKeyword_1_0()); }

	'value' 

{ after(grammarAccess.getBooleanLiteralAccess().getValueValueKeyword_1_0()); }
)

{ after(grammarAccess.getBooleanLiteralAccess().getValueValueKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__LeftOperandAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryExpressionAccess().getLeftOperandExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getBinaryExpressionAccess().getLeftOperandExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__OperatorAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryExpressionAccess().getOperatorBinaryOperatorEnumRuleCall_2_0()); }
	ruleBinaryOperator{ after(grammarAccess.getBinaryExpressionAccess().getOperatorBinaryOperatorEnumRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__RightOperandAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryExpressionAccess().getRightOperandExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getBinaryExpressionAccess().getRightOperandExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterIdentifier__ParameterAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterIdentifierAccess().getParameterParameterCrossReference_3_0()); }
(
{ before(grammarAccess.getParameterIdentifierAccess().getParameterParameterEStringParserRuleCall_3_0_1()); }
	ruleEString{ after(grammarAccess.getParameterIdentifierAccess().getParameterParameterEStringParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getParameterIdentifierAccess().getParameterParameterCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


