/*
* generated by Xtext
*/
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.xtext.example.mydsl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {
 
 	private MyDslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleConfiguratorModel
entryRuleConfiguratorModel 
:
{ before(grammarAccess.getConfiguratorModelRule()); }
	 ruleConfiguratorModel
{ after(grammarAccess.getConfiguratorModelRule()); } 
	 EOF 
;

// Rule ConfiguratorModel
ruleConfiguratorModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConfiguratorModelAccess().getGroup()); }
(rule__ConfiguratorModel__Group__0)
{ after(grammarAccess.getConfiguratorModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstraint
entryRuleConstraint 
:
{ before(grammarAccess.getConstraintRule()); }
	 ruleConstraint
{ after(grammarAccess.getConstraintRule()); } 
	 EOF 
;

// Rule Constraint
ruleConstraint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstraintAccess().getAlternatives()); }
(rule__Constraint__Alternatives)
{ after(grammarAccess.getConstraintAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameter
entryRuleParameter 
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterAccess().getGroup()); }
(rule__Parameter__Group__0)
{ after(grammarAccess.getParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEString
entryRuleEString 
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringAccess().getAlternatives()); }
(rule__EString__Alternatives)
{ after(grammarAccess.getEStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParamCategory
entryRuleParamCategory 
:
{ before(grammarAccess.getParamCategoryRule()); }
	 ruleParamCategory
{ after(grammarAccess.getParamCategoryRule()); } 
	 EOF 
;

// Rule ParamCategory
ruleParamCategory
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParamCategoryAccess().getGroup()); }
(rule__ParamCategory__Group__0)
{ after(grammarAccess.getParamCategoryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleEInt
entryRuleEInt 
:
{ before(grammarAccess.getEIntRule()); }
	 ruleEInt
{ after(grammarAccess.getEIntRule()); } 
	 EOF 
;

// Rule EInt
ruleEInt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEIntAccess().getGroup()); }
(rule__EInt__Group__0)
{ after(grammarAccess.getEIntAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleType
entryRuleSimpleType 
:
{ before(grammarAccess.getSimpleTypeRule()); }
	 ruleSimpleType
{ after(grammarAccess.getSimpleTypeRule()); } 
	 EOF 
;

// Rule SimpleType
ruleSimpleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleTypeAccess().getGroup()); }
(rule__SimpleType__Group__0)
{ after(grammarAccess.getSimpleTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnum
entryRuleEnum 
:
{ before(grammarAccess.getEnumRule()); }
	 ruleEnum
{ after(grammarAccess.getEnumRule()); } 
	 EOF 
;

// Rule Enum
ruleEnum
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumAccess().getGroup()); }
(rule__Enum__Group__0)
{ after(grammarAccess.getEnumAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValue
entryRuleValue 
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueAccess().getGroup()); }
(rule__Value__Group__0)
{ after(grammarAccess.getValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBinaryConstraint
entryRuleBinaryConstraint 
:
{ before(grammarAccess.getBinaryConstraintRule()); }
	 ruleBinaryConstraint
{ after(grammarAccess.getBinaryConstraintRule()); } 
	 EOF 
;

// Rule BinaryConstraint
ruleBinaryConstraint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBinaryConstraintAccess().getGroup()); }
(rule__BinaryConstraint__Group__0)
{ after(grammarAccess.getBinaryConstraintAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnaryConstraint
entryRuleUnaryConstraint 
:
{ before(grammarAccess.getUnaryConstraintRule()); }
	 ruleUnaryConstraint
{ after(grammarAccess.getUnaryConstraintRule()); } 
	 EOF 
;

// Rule UnaryConstraint
ruleUnaryConstraint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryConstraintAccess().getGroup()); }
(rule__UnaryConstraint__Group__0)
{ after(grammarAccess.getUnaryConstraintAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterIdentifier
entryRuleParameterIdentifier 
:
{ before(grammarAccess.getParameterIdentifierRule()); }
	 ruleParameterIdentifier
{ after(grammarAccess.getParameterIdentifierRule()); } 
	 EOF 
;

// Rule ParameterIdentifier
ruleParameterIdentifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterIdentifierAccess().getGroup()); }
(rule__ParameterIdentifier__Group__0)
{ after(grammarAccess.getParameterIdentifierAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule TypeName
ruleTypeName
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeNameAccess().getAlternatives()); }
(rule__TypeName__Alternatives)
{ after(grammarAccess.getTypeNameAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule BinaryOperator
ruleBinaryOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryOperatorAccess().getAlternatives()); }
(rule__BinaryOperator__Alternatives)
{ after(grammarAccess.getBinaryOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule UnaryOperator
ruleUnaryOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperatorAccess().getNOTEnumLiteralDeclaration()); }
(	'NOT' 
)
{ after(grammarAccess.getUnaryOperatorAccess().getNOTEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Constraint__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getBinaryConstraintParserRuleCall_0()); }
	ruleBinaryConstraint
{ after(grammarAccess.getConstraintAccess().getBinaryConstraintParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getConstraintAccess().getUnaryConstraintParserRuleCall_1()); }
	ruleUnaryConstraint
{ after(grammarAccess.getConstraintAccess().getUnaryConstraintParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getConstraintAccess().getParameterIdentifierParserRuleCall_2()); }
	ruleParameterIdentifier
{ after(grammarAccess.getConstraintAccess().getParameterIdentifierParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getSimpleTypeParserRuleCall_0()); }
	ruleSimpleType
{ after(grammarAccess.getTypeAccess().getSimpleTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getEnumParserRuleCall_1()); }
	ruleEnum
{ after(grammarAccess.getTypeAccess().getEnumParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeName__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeNameAccess().getINTEnumLiteralDeclaration_0()); }
(	'INT' 
)
{ after(grammarAccess.getTypeNameAccess().getINTEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getTypeNameAccess().getBOOLEANEnumLiteralDeclaration_1()); }
(	'BOOLEAN' 
)
{ after(grammarAccess.getTypeNameAccess().getBOOLEANEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getTypeNameAccess().getDOUBLEEnumLiteralDeclaration_2()); }
(	'DOUBLE' 
)
{ after(grammarAccess.getTypeNameAccess().getDOUBLEEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getTypeNameAccess().getSTRINGEnumLiteralDeclaration_3()); }
(	'STRING' 
)
{ after(grammarAccess.getTypeNameAccess().getSTRINGEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryOperatorAccess().getANDEnumLiteralDeclaration_0()); }
(	'AND' 
)
{ after(grammarAccess.getBinaryOperatorAccess().getANDEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getOREnumLiteralDeclaration_1()); }
(	'OR' 
)
{ after(grammarAccess.getBinaryOperatorAccess().getOREnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getXOREnumLiteralDeclaration_2()); }
(	'XOR' 
)
{ after(grammarAccess.getBinaryOperatorAccess().getXOREnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getEQUALSEnumLiteralDeclaration_3()); }
(	'EQUALS' 
)
{ after(grammarAccess.getBinaryOperatorAccess().getEQUALSEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getNOTEQUALSEnumLiteralDeclaration_4()); }
(	'NOTEQUALS' 
)
{ after(grammarAccess.getBinaryOperatorAccess().getNOTEQUALSEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getGTEnumLiteralDeclaration_5()); }
(	'GT' 
)
{ after(grammarAccess.getBinaryOperatorAccess().getGTEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getLTEnumLiteralDeclaration_6()); }
(	'LT' 
)
{ after(grammarAccess.getBinaryOperatorAccess().getLTEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getGTEQEnumLiteralDeclaration_7()); }
(	'GTEQ' 
)
{ after(grammarAccess.getBinaryOperatorAccess().getGTEQEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getLTEQEnumLiteralDeclaration_8()); }
(	'LTEQ' 
)
{ after(grammarAccess.getBinaryOperatorAccess().getLTEQEnumLiteralDeclaration_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__ConfiguratorModel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group__0__Impl
	rule__ConfiguratorModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getConfiguratorModelAction_0()); }
(

)
{ after(grammarAccess.getConfiguratorModelAccess().getConfiguratorModelAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group__1__Impl
	rule__ConfiguratorModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getConfiguratorModelKeyword_1()); }

	'ConfiguratorModel' 

{ after(grammarAccess.getConfiguratorModelAccess().getConfiguratorModelKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group__2__Impl
	rule__ConfiguratorModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getConfiguratorModelAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group__3__Impl
	rule__ConfiguratorModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getGroup_3()); }
(rule__ConfiguratorModel__Group_3__0)?
{ after(grammarAccess.getConfiguratorModelAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group__4__Impl
	rule__ConfiguratorModel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getGroup_4()); }
(rule__ConfiguratorModel__Group_4__0)?
{ after(grammarAccess.getConfiguratorModelAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group__5__Impl
	rule__ConfiguratorModel__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getGroup_5()); }
(rule__ConfiguratorModel__Group_5__0)?
{ after(grammarAccess.getConfiguratorModelAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group__6__Impl
	rule__ConfiguratorModel__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getGroup_6()); }
(rule__ConfiguratorModel__Group_6__0)?
{ after(grammarAccess.getConfiguratorModelAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getConfiguratorModelAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__ConfiguratorModel__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_3__0__Impl
	rule__ConfiguratorModel__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getNameKeyword_3_0()); }

	'Name' 

{ after(grammarAccess.getConfiguratorModelAccess().getNameKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getNameAssignment_3_1()); }
(rule__ConfiguratorModel__NameAssignment_3_1)
{ after(grammarAccess.getConfiguratorModelAccess().getNameAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConfiguratorModel__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_4__0__Impl
	rule__ConfiguratorModel__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getParametersKeyword_4_0()); }

	'parameters' 

{ after(grammarAccess.getConfiguratorModelAccess().getParametersKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_4__1__Impl
	rule__ConfiguratorModel__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getLeftCurlyBracketKeyword_4_1()); }

	'{' 

{ after(grammarAccess.getConfiguratorModelAccess().getLeftCurlyBracketKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_4__2__Impl
	rule__ConfiguratorModel__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getParametersAssignment_4_2()); }
(rule__ConfiguratorModel__ParametersAssignment_4_2)
{ after(grammarAccess.getConfiguratorModelAccess().getParametersAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_4__3__Impl
	rule__ConfiguratorModel__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getGroup_4_3()); }
(rule__ConfiguratorModel__Group_4_3__0)*
{ after(grammarAccess.getConfiguratorModelAccess().getGroup_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getRightCurlyBracketKeyword_4_4()); }

	'}' 

{ after(grammarAccess.getConfiguratorModelAccess().getRightCurlyBracketKeyword_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ConfiguratorModel__Group_4_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_4_3__0__Impl
	rule__ConfiguratorModel__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_4_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getCommaKeyword_4_3_0()); }

	',' 

{ after(grammarAccess.getConfiguratorModelAccess().getCommaKeyword_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group_4_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_4_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getParametersAssignment_4_3_1()); }
(rule__ConfiguratorModel__ParametersAssignment_4_3_1)
{ after(grammarAccess.getConfiguratorModelAccess().getParametersAssignment_4_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConfiguratorModel__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_5__0__Impl
	rule__ConfiguratorModel__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getConstraintsKeyword_5_0()); }

	'constraints' 

{ after(grammarAccess.getConfiguratorModelAccess().getConstraintsKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_5__1__Impl
	rule__ConfiguratorModel__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getLeftCurlyBracketKeyword_5_1()); }

	'{' 

{ after(grammarAccess.getConfiguratorModelAccess().getLeftCurlyBracketKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_5__2__Impl
	rule__ConfiguratorModel__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getConstraintsAssignment_5_2()); }
(rule__ConfiguratorModel__ConstraintsAssignment_5_2)
{ after(grammarAccess.getConfiguratorModelAccess().getConstraintsAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_5__3__Impl
	rule__ConfiguratorModel__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getGroup_5_3()); }
(rule__ConfiguratorModel__Group_5_3__0)*
{ after(grammarAccess.getConfiguratorModelAccess().getGroup_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group_5__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_5__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_5__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getRightCurlyBracketKeyword_5_4()); }

	'}' 

{ after(grammarAccess.getConfiguratorModelAccess().getRightCurlyBracketKeyword_5_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ConfiguratorModel__Group_5_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_5_3__0__Impl
	rule__ConfiguratorModel__Group_5_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_5_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getCommaKeyword_5_3_0()); }

	',' 

{ after(grammarAccess.getConfiguratorModelAccess().getCommaKeyword_5_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group_5_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_5_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_5_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getConstraintsAssignment_5_3_1()); }
(rule__ConfiguratorModel__ConstraintsAssignment_5_3_1)
{ after(grammarAccess.getConfiguratorModelAccess().getConstraintsAssignment_5_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConfiguratorModel__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_6__0__Impl
	rule__ConfiguratorModel__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getCategoriesKeyword_6_0()); }

	'categories' 

{ after(grammarAccess.getConfiguratorModelAccess().getCategoriesKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_6__1__Impl
	rule__ConfiguratorModel__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getLeftCurlyBracketKeyword_6_1()); }

	'{' 

{ after(grammarAccess.getConfiguratorModelAccess().getLeftCurlyBracketKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_6__2__Impl
	rule__ConfiguratorModel__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getCategoriesAssignment_6_2()); }
(rule__ConfiguratorModel__CategoriesAssignment_6_2)
{ after(grammarAccess.getConfiguratorModelAccess().getCategoriesAssignment_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_6__3__Impl
	rule__ConfiguratorModel__Group_6__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getGroup_6_3()); }
(rule__ConfiguratorModel__Group_6_3__0)*
{ after(grammarAccess.getConfiguratorModelAccess().getGroup_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group_6__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_6__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_6__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getRightCurlyBracketKeyword_6_4()); }

	'}' 

{ after(grammarAccess.getConfiguratorModelAccess().getRightCurlyBracketKeyword_6_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ConfiguratorModel__Group_6_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_6_3__0__Impl
	rule__ConfiguratorModel__Group_6_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_6_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getCommaKeyword_6_3_0()); }

	',' 

{ after(grammarAccess.getConfiguratorModelAccess().getCommaKeyword_6_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfiguratorModel__Group_6_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfiguratorModel__Group_6_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__Group_6_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getCategoriesAssignment_6_3_1()); }
(rule__ConfiguratorModel__CategoriesAssignment_6_3_1)
{ after(grammarAccess.getConfiguratorModelAccess().getCategoriesAssignment_6_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getRequiredAssignment_0()); }
(rule__Parameter__RequiredAssignment_0)?
{ after(grammarAccess.getParameterAccess().getRequiredAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getParameterKeyword_1()); }

	'Parameter' 

{ after(grammarAccess.getParameterAccess().getParameterKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__2__Impl
	rule__Parameter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getParameterAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__3__Impl
	rule__Parameter__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getGroup_3()); }
(rule__Parameter__Group_3__0)?
{ after(grammarAccess.getParameterAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__4__Impl
	rule__Parameter__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getGroup_4()); }
(rule__Parameter__Group_4__0)?
{ after(grammarAccess.getParameterAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__5__Impl
	rule__Parameter__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getParamTypeKeyword_5()); }

	'paramType' 

{ after(grammarAccess.getParameterAccess().getParamTypeKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__6__Impl
	rule__Parameter__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getParamTypeAssignment_6()); }
(rule__Parameter__ParamTypeAssignment_6)
{ after(grammarAccess.getParameterAccess().getParamTypeAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getParameterAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Parameter__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group_3__0__Impl
	rule__Parameter__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameKeyword_3_0()); }

	'Name' 

{ after(grammarAccess.getParameterAccess().getNameKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameAssignment_3_1()); }
(rule__Parameter__NameAssignment_3_1)
{ after(grammarAccess.getParameterAccess().getNameAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameter__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group_4__0__Impl
	rule__Parameter__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getMaxChosenValuesKeyword_4_0()); }

	'maxChosenValues' 

{ after(grammarAccess.getParameterAccess().getMaxChosenValuesKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getMaxChosenValuesAssignment_4_1()); }
(rule__Parameter__MaxChosenValuesAssignment_4_1)
{ after(grammarAccess.getParameterAccess().getMaxChosenValuesAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParamCategory__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamCategory__Group__0__Impl
	rule__ParamCategory__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamCategory__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamCategoryAccess().getParamCategoryKeyword_0()); }

	'ParamCategory' 

{ after(grammarAccess.getParamCategoryAccess().getParamCategoryKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParamCategory__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamCategory__Group__1__Impl
	rule__ParamCategory__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamCategory__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamCategoryAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getParamCategoryAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParamCategory__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamCategory__Group__2__Impl
	rule__ParamCategory__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamCategory__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamCategoryAccess().getGroup_2()); }
(rule__ParamCategory__Group_2__0)?
{ after(grammarAccess.getParamCategoryAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParamCategory__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamCategory__Group__3__Impl
	rule__ParamCategory__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamCategory__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamCategoryAccess().getParamsKeyword_3()); }

	'params' 

{ after(grammarAccess.getParamCategoryAccess().getParamsKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParamCategory__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamCategory__Group__4__Impl
	rule__ParamCategory__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamCategory__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamCategoryAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getParamCategoryAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParamCategory__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamCategory__Group__5__Impl
	rule__ParamCategory__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamCategory__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamCategoryAccess().getParamsAssignment_5()); }
(rule__ParamCategory__ParamsAssignment_5)
{ after(grammarAccess.getParamCategoryAccess().getParamsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParamCategory__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamCategory__Group__6__Impl
	rule__ParamCategory__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamCategory__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamCategoryAccess().getGroup_6()); }
(rule__ParamCategory__Group_6__0)*
{ after(grammarAccess.getParamCategoryAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParamCategory__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamCategory__Group__7__Impl
	rule__ParamCategory__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamCategory__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamCategoryAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getParamCategoryAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParamCategory__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamCategory__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamCategory__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamCategoryAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getParamCategoryAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__ParamCategory__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamCategory__Group_2__0__Impl
	rule__ParamCategory__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamCategory__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamCategoryAccess().getNameKeyword_2_0()); }

	'Name' 

{ after(grammarAccess.getParamCategoryAccess().getNameKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParamCategory__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamCategory__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamCategory__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamCategoryAccess().getNameAssignment_2_1()); }
(rule__ParamCategory__NameAssignment_2_1)
{ after(grammarAccess.getParamCategoryAccess().getNameAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParamCategory__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamCategory__Group_6__0__Impl
	rule__ParamCategory__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamCategory__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamCategoryAccess().getCommaKeyword_6_0()); }

	',' 

{ after(grammarAccess.getParamCategoryAccess().getCommaKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParamCategory__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamCategory__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamCategory__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamCategoryAccess().getParamsAssignment_6_1()); }
(rule__ParamCategory__ParamsAssignment_6_1)
{ after(grammarAccess.getParamCategoryAccess().getParamsAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EInt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EInt__Group__0__Impl
	rule__EInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
(
	'-' 
)?
{ after(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EInt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
{ after(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SimpleType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group__0__Impl
	rule__SimpleType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getSimpleTypeAction_0()); }
(

)
{ after(grammarAccess.getSimpleTypeAccess().getSimpleTypeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group__1__Impl
	rule__SimpleType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getSimpleTypeKeyword_1()); }

	'SimpleType' 

{ after(grammarAccess.getSimpleTypeAccess().getSimpleTypeKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group__2__Impl
	rule__SimpleType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getSimpleTypeAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group__3__Impl
	rule__SimpleType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getGroup_3()); }
(rule__SimpleType__Group_3__0)?
{ after(grammarAccess.getSimpleTypeAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getSimpleTypeAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__SimpleType__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group_3__0__Impl
	rule__SimpleType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getNameKeyword_3_0()); }

	'Name' 

{ after(grammarAccess.getSimpleTypeAccess().getNameKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleType__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleType__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getNameAssignment_3_1()); }
(rule__SimpleType__NameAssignment_3_1)
{ after(grammarAccess.getSimpleTypeAccess().getNameAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Enum__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__0__Impl
	rule__Enum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getEnumKeyword_0()); }

	'Enum' 

{ after(grammarAccess.getEnumAccess().getEnumKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__1__Impl
	rule__Enum__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getEnumAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__2__Impl
	rule__Enum__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getValuesKeyword_2()); }

	'values' 

{ after(grammarAccess.getEnumAccess().getValuesKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__3__Impl
	rule__Enum__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getEnumAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__4__Impl
	rule__Enum__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getValuesAssignment_4()); }
(rule__Enum__ValuesAssignment_4)
{ after(grammarAccess.getEnumAccess().getValuesAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__5__Impl
	rule__Enum__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getGroup_5()); }
(rule__Enum__Group_5__0)*
{ after(grammarAccess.getEnumAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__6__Impl
	rule__Enum__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getEnumAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getEnumAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Enum__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group_5__0__Impl
	rule__Enum__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getCommaKeyword_5_0()); }

	',' 

{ after(grammarAccess.getEnumAccess().getCommaKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getValuesAssignment_5_1()); }
(rule__Enum__ValuesAssignment_5_1)
{ after(grammarAccess.getEnumAccess().getValuesAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Value__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group__0__Impl
	rule__Value__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getValueAction_0()); }
(

)
{ after(grammarAccess.getValueAccess().getValueAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group__1__Impl
	rule__Value__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getValueKeyword_1()); }

	'Value' 

{ after(grammarAccess.getValueAccess().getValueKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getNameAssignment_2()); }
(rule__Value__NameAssignment_2)
{ after(grammarAccess.getValueAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BinaryConstraint__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryConstraint__Group__0__Impl
	rule__BinaryConstraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryConstraint__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryConstraintAccess().getBinaryConstraintKeyword_0()); }

	'BinaryConstraint' 

{ after(grammarAccess.getBinaryConstraintAccess().getBinaryConstraintKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryConstraint__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryConstraint__Group__1__Impl
	rule__BinaryConstraint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryConstraint__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryConstraintAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getBinaryConstraintAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryConstraint__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryConstraint__Group__2__Impl
	rule__BinaryConstraint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryConstraint__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryConstraintAccess().getGroup_2()); }
(rule__BinaryConstraint__Group_2__0)?
{ after(grammarAccess.getBinaryConstraintAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryConstraint__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryConstraint__Group__3__Impl
	rule__BinaryConstraint__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryConstraint__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryConstraintAccess().getLeftOperandKeyword_3()); }

	'leftOperand' 

{ after(grammarAccess.getBinaryConstraintAccess().getLeftOperandKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryConstraint__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryConstraint__Group__4__Impl
	rule__BinaryConstraint__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryConstraint__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryConstraintAccess().getLeftOperandAssignment_4()); }
(rule__BinaryConstraint__LeftOperandAssignment_4)
{ after(grammarAccess.getBinaryConstraintAccess().getLeftOperandAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryConstraint__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryConstraint__Group__5__Impl
	rule__BinaryConstraint__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryConstraint__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryConstraintAccess().getRightOperandKeyword_5()); }

	'rightOperand' 

{ after(grammarAccess.getBinaryConstraintAccess().getRightOperandKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryConstraint__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryConstraint__Group__6__Impl
	rule__BinaryConstraint__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryConstraint__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryConstraintAccess().getRightOperandAssignment_6()); }
(rule__BinaryConstraint__RightOperandAssignment_6)
{ after(grammarAccess.getBinaryConstraintAccess().getRightOperandAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryConstraint__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryConstraint__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryConstraint__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryConstraintAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getBinaryConstraintAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__BinaryConstraint__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryConstraint__Group_2__0__Impl
	rule__BinaryConstraint__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryConstraint__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryConstraintAccess().getOperatorKeyword_2_0()); }

	'operator' 

{ after(grammarAccess.getBinaryConstraintAccess().getOperatorKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryConstraint__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryConstraint__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryConstraint__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryConstraintAccess().getOperatorAssignment_2_1()); }
(rule__BinaryConstraint__OperatorAssignment_2_1)
{ after(grammarAccess.getBinaryConstraintAccess().getOperatorAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnaryConstraint__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryConstraint__Group__0__Impl
	rule__UnaryConstraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryConstraint__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryConstraintAccess().getUnaryConstraintKeyword_0()); }

	'UnaryConstraint' 

{ after(grammarAccess.getUnaryConstraintAccess().getUnaryConstraintKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryConstraint__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryConstraint__Group__1__Impl
	rule__UnaryConstraint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryConstraint__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryConstraintAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getUnaryConstraintAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryConstraint__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryConstraint__Group__2__Impl
	rule__UnaryConstraint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryConstraint__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryConstraintAccess().getGroup_2()); }
(rule__UnaryConstraint__Group_2__0)?
{ after(grammarAccess.getUnaryConstraintAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryConstraint__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryConstraint__Group__3__Impl
	rule__UnaryConstraint__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryConstraint__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryConstraintAccess().getOperandKeyword_3()); }

	'operand' 

{ after(grammarAccess.getUnaryConstraintAccess().getOperandKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryConstraint__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryConstraint__Group__4__Impl
	rule__UnaryConstraint__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryConstraint__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryConstraintAccess().getOperandAssignment_4()); }
(rule__UnaryConstraint__OperandAssignment_4)
{ after(grammarAccess.getUnaryConstraintAccess().getOperandAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryConstraint__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryConstraint__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryConstraint__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryConstraintAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getUnaryConstraintAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__UnaryConstraint__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryConstraint__Group_2__0__Impl
	rule__UnaryConstraint__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryConstraint__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryConstraintAccess().getOperatorKeyword_2_0()); }

	'operator' 

{ after(grammarAccess.getUnaryConstraintAccess().getOperatorKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryConstraint__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryConstraint__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryConstraint__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryConstraintAccess().getOperatorAssignment_2_1()); }
(rule__UnaryConstraint__OperatorAssignment_2_1)
{ after(grammarAccess.getUnaryConstraintAccess().getOperatorAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParameterIdentifier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterIdentifier__Group__0__Impl
	rule__ParameterIdentifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterIdentifier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterIdentifierAccess().getParameterIdentifierKeyword_0()); }

	'ParameterIdentifier' 

{ after(grammarAccess.getParameterIdentifierAccess().getParameterIdentifierKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterIdentifier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterIdentifier__Group__1__Impl
	rule__ParameterIdentifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterIdentifier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterIdentifierAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getParameterIdentifierAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterIdentifier__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterIdentifier__Group__2__Impl
	rule__ParameterIdentifier__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterIdentifier__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterIdentifierAccess().getParameterKeyword_2()); }

	'parameter' 

{ after(grammarAccess.getParameterIdentifierAccess().getParameterKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterIdentifier__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterIdentifier__Group__3__Impl
	rule__ParameterIdentifier__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterIdentifier__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterIdentifierAccess().getParameterAssignment_3()); }
(rule__ParameterIdentifier__ParameterAssignment_3)
{ after(grammarAccess.getParameterIdentifierAccess().getParameterAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterIdentifier__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterIdentifier__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterIdentifier__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterIdentifierAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getParameterIdentifierAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}













rule__ConfiguratorModel__NameAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getNameEStringParserRuleCall_3_1_0()); }
	ruleEString{ after(grammarAccess.getConfiguratorModelAccess().getNameEStringParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__ParametersAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getParametersParameterParserRuleCall_4_2_0()); }
	ruleParameter{ after(grammarAccess.getConfiguratorModelAccess().getParametersParameterParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__ParametersAssignment_4_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getParametersParameterParserRuleCall_4_3_1_0()); }
	ruleParameter{ after(grammarAccess.getConfiguratorModelAccess().getParametersParameterParserRuleCall_4_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__ConstraintsAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getConstraintsConstraintParserRuleCall_5_2_0()); }
	ruleConstraint{ after(grammarAccess.getConfiguratorModelAccess().getConstraintsConstraintParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__ConstraintsAssignment_5_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getConstraintsConstraintParserRuleCall_5_3_1_0()); }
	ruleConstraint{ after(grammarAccess.getConfiguratorModelAccess().getConstraintsConstraintParserRuleCall_5_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__CategoriesAssignment_6_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getCategoriesParamCategoryParserRuleCall_6_2_0()); }
	ruleParamCategory{ after(grammarAccess.getConfiguratorModelAccess().getCategoriesParamCategoryParserRuleCall_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConfiguratorModel__CategoriesAssignment_6_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfiguratorModelAccess().getCategoriesParamCategoryParserRuleCall_6_3_1_0()); }
	ruleParamCategory{ after(grammarAccess.getConfiguratorModelAccess().getCategoriesParamCategoryParserRuleCall_6_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__RequiredAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getRequiredRequiredKeyword_0_0()); }
(
{ before(grammarAccess.getParameterAccess().getRequiredRequiredKeyword_0_0()); }

	'required' 

{ after(grammarAccess.getParameterAccess().getRequiredRequiredKeyword_0_0()); }
)

{ after(grammarAccess.getParameterAccess().getRequiredRequiredKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameEStringParserRuleCall_3_1_0()); }
	ruleEString{ after(grammarAccess.getParameterAccess().getNameEStringParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__MaxChosenValuesAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getMaxChosenValuesEIntParserRuleCall_4_1_0()); }
	ruleEInt{ after(grammarAccess.getParameterAccess().getMaxChosenValuesEIntParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__ParamTypeAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getParamTypeTypeParserRuleCall_6_0()); }
	ruleType{ after(grammarAccess.getParameterAccess().getParamTypeTypeParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParamCategory__NameAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamCategoryAccess().getNameEStringParserRuleCall_2_1_0()); }
	ruleEString{ after(grammarAccess.getParamCategoryAccess().getNameEStringParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParamCategory__ParamsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamCategoryAccess().getParamsParameterParserRuleCall_5_0()); }
	ruleParameter{ after(grammarAccess.getParamCategoryAccess().getParamsParameterParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParamCategory__ParamsAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamCategoryAccess().getParamsParameterParserRuleCall_6_1_0()); }
	ruleParameter{ after(grammarAccess.getParamCategoryAccess().getParamsParameterParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__NameAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getNameTypeNameEnumRuleCall_3_1_0()); }
	ruleTypeName{ after(grammarAccess.getSimpleTypeAccess().getNameTypeNameEnumRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__ValuesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getValuesValueParserRuleCall_4_0()); }
	ruleValue{ after(grammarAccess.getEnumAccess().getValuesValueParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__ValuesAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getValuesValueParserRuleCall_5_1_0()); }
	ruleValue{ after(grammarAccess.getEnumAccess().getValuesValueParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getNameEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getValueAccess().getNameEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryConstraint__OperatorAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryConstraintAccess().getOperatorBinaryOperatorEnumRuleCall_2_1_0()); }
	ruleBinaryOperator{ after(grammarAccess.getBinaryConstraintAccess().getOperatorBinaryOperatorEnumRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryConstraint__LeftOperandAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryConstraintAccess().getLeftOperandConstraintParserRuleCall_4_0()); }
	ruleConstraint{ after(grammarAccess.getBinaryConstraintAccess().getLeftOperandConstraintParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryConstraint__RightOperandAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryConstraintAccess().getRightOperandConstraintParserRuleCall_6_0()); }
	ruleConstraint{ after(grammarAccess.getBinaryConstraintAccess().getRightOperandConstraintParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryConstraint__OperatorAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryConstraintAccess().getOperatorUnaryOperatorEnumRuleCall_2_1_0()); }
	ruleUnaryOperator{ after(grammarAccess.getUnaryConstraintAccess().getOperatorUnaryOperatorEnumRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryConstraint__OperandAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryConstraintAccess().getOperandConstraintParserRuleCall_4_0()); }
	ruleConstraint{ after(grammarAccess.getUnaryConstraintAccess().getOperandConstraintParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterIdentifier__ParameterAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterIdentifierAccess().getParameterParameterCrossReference_3_0()); }
(
{ before(grammarAccess.getParameterIdentifierAccess().getParameterParameterEStringParserRuleCall_3_0_1()); }
	ruleEString{ after(grammarAccess.getParameterIdentifierAccess().getParameterParameterEStringParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getParameterIdentifierAccess().getParameterParameterCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


