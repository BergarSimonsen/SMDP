// automatically generated by Xtext
grammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals

import "http://www.itu.dk/smdp/" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Model returns Model:
	'Model'
	'{'
		'{' configuratorModels+=ConfiguratorModel ( "," configuratorModels+=ConfiguratorModel)* '}' 
	'}';

Constraint returns Constraint:
	BinaryConstraint | Integer | Double | Stringg | Boolean | ParameterIdentifier;

Type returns Type:
	Enum | Integer | Double | Stringg | Boolean;

Literal returns Literal:
	Integer | Double | Stringg | Boolean;

ConfiguratorModel returns ConfiguratorModel:
	{ConfiguratorModel}
	'ConfiguratorModel'
	name=EString
	'{'
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		('constraints' '{' constraints+=Constraint ( "," constraints+=Constraint)* '}' )?
	'}';

EString returns ecore::EString:
	STRING | ID;

Parameter returns Parameter:
	'Parameter'
	name=EString
	'('
		('minChosenValues' ':' minChosenValues=EInt) ','
		('maxChosenValues' ':' maxChosenValues=EInt) ','
	')' ':'	type=Type
//		('{' children+=Parameter ( "," children+=Parameter)* '}' )?
	;

EInt returns ecore::EInt:
	'-'? INT;

Enum returns Enum:
	'['	values+=Literal ( "," values+=Literal)*	']';

Integer returns Integer:
	{Integer}
	'int' | (value=EInt);

Double returns Double:
	{Double}
	'double' | (value=EDouble);

Stringg returns String:
	{Stringg}
	'String' | (value=EString);
	
//String0 returns String:
//	{String}
//	'String' | (value=EString);	

Boolean returns Boolean:
	{Boolean}
	'boolean' | (value=EBoolean);

EDouble returns ecore::EDouble:
	'-'? INT? '.' INT (('E'|'e') '-'? INT)?;

EBoolean returns ecore::EBoolean:
	'true' | 'false';

BinaryConstraint returns BinaryConstraint:
	'('
		leftOperand=Constraint
		operator=BinaryOperator
		rightOperand=Constraint
	')';

ParameterIdentifier returns ParameterIdentifier:
	parameter=[Parameter|EString];

enum BinaryOperator returns BinaryOperator:
				AND = '&&' | OR = '||' | XOR = '!||' | EQUALS = '==' | NOTEQUALS = '!=' | GT = '>' | LT = '<' | GTEQ = '>=' | LTEQ = '<=';
