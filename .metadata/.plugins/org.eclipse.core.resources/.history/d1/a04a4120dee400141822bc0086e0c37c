package validation;

import org.eclipse.emf.common.util.TreeIterator;
import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.emf.ecore.resource.impl.ResourceSetImpl;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.xmi.impl.XMIResourceFactoryImpl;
import org.eclipse.xtext.xbase.lib.Functions.Function1;
import org.eclipse.xtext.xbase.lib.InputOutput;
import org.eclipse.xtext.xbase.lib.IteratorExtensions;

public class Main {
	public static void main(String[] args) {
	    final ResourceSetImpl resourceSet = new ResourceSetImpl();
	    final URI uri = URI.createURI("test-files/test-02.xfsm");
	    final Resource resource = resourceSet.getResource(uri, true);
	    TreeIterator<EObject> _allProperContents = EcoreUtil.<EObject>getAllProperContents(resource, false);
	    final Function1<EObject, Boolean> _function = new Function1<EObject, Boolean>() {
	      public Boolean apply(final EObject it) {
	        return Boolean.valueOf(Constraints.constraint(it));
	      }
	    };
	    boolean _forall = IteratorExtensions.<EObject>forall(_allProperContents, _function);
	    if (_forall) {
	      InputOutput.<String>println("All constraints are satisfied!");
	    } else {
	      InputOutput.<String>println("Some constraint is violated");
	    }
	}

}
