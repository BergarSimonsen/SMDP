// automatically generated by Xtext
grammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals

import "http://www.itu.dk/smdp/" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Model returns Model:
	'Model'
	'{'
		'configuratorModels' '{' configuratorModels+=ConfiguratorModel ( "," configuratorModels+=ConfiguratorModel)* '}' 
	'}';



Constraint returns Constraint:
	BinaryConstraint | Integer | Double | String0 | Boolean | ParameterIdentifier;

Type returns Type:
	Enum | Integer | Double | String0 | Boolean;

Literal returns Literal:
	Integer | Double | String0 | Boolean;

ConfiguratorModel returns ConfiguratorModel:
	{ConfiguratorModel}
	'ConfiguratorModel'
	name=EString
	'{'
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		('constraints' '{' constraints+=Constraint ( "," constraints+=Constraint)* '}' )?
	'}';

EString returns ecore::EString:
	STRING | ID;

Parameter returns Parameter:
	'Parameter'
	name=EString
	'{'
		('maxChosenValues' maxChosenValues=EInt)?
		('minChosenValues' minChosenValues=EInt)?
		('children' '{' children+=Parameter ( "," children+=Parameter)* '}' )?
		'type' type=Type
	'}';

EInt returns ecore::EInt:
	'-'? INT;

Enum returns Enum:
	'Enum'
	'{'
		'values' '{' values+=Literal ( "," values+=Literal)* '}' 
	'}';

Integer returns Integer:
	{Integer}
	'Integer'
	'{'
		('value' value=EInt)?
	'}';

Double returns Double:
	{Double}
	'Double'
	'{'
		('value' value=EDouble)?
	'}';

String0 returns String:
	{String}
	'String'
	'{'
		('value' value=EString)?
	'}';

Boolean returns Boolean:
	{Boolean}
	(value?='value')?
	'Boolean'
	;

EDouble returns ecore::EDouble:
	'-'? INT? '.' INT (('E'|'e') '-'? INT)?;

EBoolean returns ecore::EBoolean:
	'true' | 'false';

BinaryConstraint returns BinaryConstraint:
	'('
		leftOperand=Constraint
		operator=BinaryOperator
		rightOperand=Constraint
	')';

ParameterIdentifier returns ParameterIdentifier:
	parameter=[Parameter|EString];

enum BinaryOperator returns BinaryOperator:
				AND = '&&' | OR = '||' | XOR = '!||' | EQUALS = '==' | NOTEQUALS = '!=' | GT = '>' | LT = '<' | GTEQ = '>=' | LTEQ = '<=';
